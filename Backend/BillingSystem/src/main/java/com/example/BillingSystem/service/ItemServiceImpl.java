package com.example.BillingSystem.service;
import org.springframework.stereotype.Service;
import com.example.BillingSystem.exception.BillingSystemAlreadyExist;
import com.example.BillingSystem.exception.BillingSystemNotFoundException;
import com.example.BillingSystem.model.Item;
import com.example.BillingSystem.repository.ItemRepository;
import java.util.List;
@Service
public class ItemServiceImpl implements ItemService {

    private final ItemRepository itemRepository;

    public ItemServiceImpl(ItemRepository itemRepository) {
        this.itemRepository = itemRepository;
    }

    @Override
    public Item addItem(Item item) {
        // Check if the item with the same name already exists
        if (itemRepository.existsByName(item.getName())) {
            throw new BillingSystemAlreadyExist("Item name already exists");
        }

        // Save the item to the database
        int save = itemRepository.save(item); // Save and return the saved item

        return item; // Return the saved item with its ID (if autogenerated)
    }

    
    //Update logic 
    @Override
    public Item UpdateItem(Item item) {
        if (!itemRepository.existsById(item.getItemId())) {
            throw new BillingSystemNotFoundException("Item does not exist");
        }
        itemRepository.update(item);
        return item;
    }


    @Override
    public List<Item> getAllItems() {
        return itemRepository.findAll();
    }
    
  //Delete logic 
    @Override
    public Item DeleteItem(Item item) {
        if (!itemRepository.existsById(item.getItemId())) {
            throw new BillingSystemNotFoundException("Item does not exist");
        }
        itemRepository.delete(item);
        return item;
    }
}

